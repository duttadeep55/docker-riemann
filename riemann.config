; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:console true})

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "0.0.0.0"]
  (tcp-server  {:host host})
  (udp-server  {:host host})
  (ws-server   {:host host})
  (repl-server {:host host}))

; Expire old events from the index every 30 seconds.
(periodically-expire 30)

(def influx {
        :version  :0.9
        :host     "monitoring-influxdb"
        :port     8086
        :username "root"
        :password "root"
        :db       "_internal"
    }
)
 
(def influxBatchSender
  (batch 100 1/10
         (async-queue! :agg {:queue-size 1000
                             :core-pool-size 1
                             :max-pool-size 4
                             :keep-alive-time 60000}
                             (influxdb influx))))

(def pushtocloud (cloudwatch {:access-key "AKIAJ7DNEOMFYB7CLBMA"
               :secret-key "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"
               :endpoint "monitoring.us-west-2.amazonaws.com"
               :namespace "Test_Monitoring"
})
)   

(let [index (index)]
  (streams
   influxBatchSender
    pushtocloud   
    #(info %)
  )
)
